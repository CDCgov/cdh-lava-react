{
  "commit-message-editor.staticTemplate": [
    "feat: Short description",
    "",
    "Message body",
    "",
    "Message footer"
  ],
  "commit-message-editor.dynamicTemplate": [
    "{type}{scope}: {description}",
    "",
    "{body}",
    "",
    "{breaking_change}{footer}"
  ],
  "commit-message-editor.tokens": [
    {
      "label": "Type",
      "name": "type",
      "type": "enum",
      "options": [
        {
          "label": "---",
          "value": ""
        },
        {
          "label": "build",
          "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)"
        },
        {
          "label": "chore",
          "description": "Updating grunt tasks etc; no production code change"
        },
        {
          "label": "ci",
          "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)"
        },
        {
          "label": "docs",
          "description": "Documentation only changes"
        },
        {
          "label": "feat",
          "description": "A new feature"
        },
        {
          "label": "fix",
          "description": "A bug fix"
        },
        {
          "label": "perf",
          "description": "A code change that improves performance"
        },
        {
          "label": "refactor",
          "description": "A code change that neither fixes a bug nor adds a feature"
        },
        {
          "label": "revert"
        },
        {
          "label": "style",
          "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
        },
        {
          "label": "test",
          "description": "Adding missing tests or correcting existing tests"
        }
      ],
      "description": "Type of changes"
    },
    {
      "label": "Scope",
      "name": "scope",
      "type": "enum",
      "description": "A scope may be provided to a commit's type, to provide additional contextual information and is contained within parenthesis, e.g., \"feat(parser): add ability to parse arrays\".",
      "prefix": "(",
      "suffix": ")",
      "options": [
        {
          "label": "--",
          "value": "",
          "description": "No specific file or directory"
        },
        {
          "label": ".github",
          "value": ".github",
          "description": "GitHub workflow related files and configurations"
        },
        {
          "label": ".gitignore",
          "value": ".gitignore",
          "description": "GitHub configurations for ignoring files"
        },
        {
          "label": ".vscode",
          "value": ".vscode",
          "description": "Configurations for VSCode - Particularly commits"
        },
        {
          "label": "package.json",
          "value": "package.json",
          "description": "Semantic Release and Note configuration for entire project"
        },
        {
          "label": "pyproject.toml",
          "value": "pyproject.toml",
          "description": "Python project configuration file"
        },
        {
          "label": "readme.md",
          "value": "readme.md",
          "description": "Readme file"
        },
        {
          "label": ".tours",
          "value": ".tours",
          "description": "Tour files"
        },
        {
          "label": ".vscode",
          "value": ".vscode",
          "description": "Visual Studio Code related files and configurations"
        },
        {
          "label": "cdc_react\\packages\\cdcheader",
          "value": "cdc_react\\packages\\cdcheader",
          "description": "Header Menu React Package for CDH LAVA Python"
        },
        {
          "label": "cdc_react\\packages\\cdcmarkdown",
          "value": "cdc_react\\packages\\cdcmarkdown",
          "description": "Markdown React Package for CDH LAVA Python"
        },
        {
          "label": "cdc_react\\packages\\cdcsidebar",
          "value": "cdc_react\\packages\\cdcsidebar",
          "description": "Sidebar React Package for CDH LAVA Python"
        },
        {
          "label": "cdc_react\\packages\\cdcsitetitle",
          "value": "cdc_react\\packages\\cdcsitetitle",
          "description": "Site Title React Package for CDH LAVA Python"
        },
        {
          "label": "docs",
          "value": "docs",
          "description": "Documentation"
        }
      ]
    },
    {
      "label": "Short description",
      "name": "description",
      "description": "Short description in the subject line.",
      "type": "text",
      "multiline": false
    },
    {
      "label": "Body",
      "name": "body",
      "description": "Optional body",
      "type": "text",
      "multiline": true,
      "lines": 5,
      "maxLines": 10
    },
    {
      "label": "Breaking change",
      "name": "breaking_change",
      "type": "boolean",
      "value": "BREAKING CHANGE: ",
      "default": false
    },
    {
      "label": "Footer",
      "name": "footer",
      "description": "Optional footer",
      "type": "text",
      "multiline": true
    }
  ],

  "python.pythonPath": "~/Envs/WONDER_METADATA_DEV/Scripts",
  "python.testing.pytestArgs": ["cdh_lava_core_lib"],
  "python.autoComplete.extraPaths": ["cdh_lava_core/cdh_lava_core"],
  "python.testing.unittestEnabled": false,
  "python.testing.pytestEnabled": true,
  "python.testing.cwd": "${workspaceFolder}/cdh_lava_core",
  "esbonio.sphinx.confDir": "",
  "python.analysis.typeCheckingMode": "off",
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter"
  },
  "python.envFile": "${workspaceFolder}\\.databricks\\.databricks.env",
  "databricks.python.envFile": "${workspaceFolder}/.env",
  "jupyter.interactiveWindow.cellMarker.codeRegex": "^# COMMAND ----------|^# Databricks notebook source|^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])",
  "jupyter.interactiveWindow.cellMarker.default": "# COMMAND ----------",
  "databricks.sync.destinationType": "repo",
  "python.analysis.inlayHints.pytestParameters": true,
  "pythonTestExplorer.testFramework": "pytest"
}
